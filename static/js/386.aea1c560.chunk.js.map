{"version":3,"file":"static/js/386.aea1c560.chunk.js","mappings":"+QAGaA,EAAeC,EAAAA,GAAAA,IAAH,yIAOZC,EAAeD,EAAAA,GAAAA,IAAH,6JAQZE,EAAgBF,EAAAA,GAAAA,IAAH,uGAMbG,GAAgBH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yhB,SCb1B,EATgB,WACf,OACC,iCACC,SAACG,EAAD,CAAeE,GAAG,YAAlB,sBACA,SAACF,EAAD,CAAeE,GAAG,SAAlB,uBAGF,E,oBCOD,EAZmB,WAClB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GAC/B,OACC,iCACC,SAACL,EAAD,CAAeE,GAAG,IAAlB,kBACCC,IACA,SAACH,EAAD,CAAeE,GAAG,YAAlB,wBAIH,E,UCZYI,EAAgBT,EAAAA,GAAAA,IAAH,yQAgBbU,EAAOV,EAAAA,GAAAA,KAAH,qMASJW,EAASX,EAAAA,GAAAA,OAAH,sD,SCNnB,EAdwB,WACvB,IAAMY,GAAWC,EAAAA,EAAAA,MACXC,GAAOP,EAAAA,EAAAA,IAAYQ,EAAAA,GAEzB,OACC,UAACN,EAAD,YACC,UAACC,EAAD,uBAAgBI,MAChB,SAACH,EAAD,CAAQK,KAAK,SAASC,QAAS,kBAAML,GAASM,EAAAA,EAAAA,MAAf,EAA/B,UACC,SAAC,MAAD,CAAUC,KAAK,WAIlB,ECjBYC,EAAapB,EAAAA,GAAAA,IAAH,skBAUR,qBAAGqB,KACR,gBAAkB,mBADb,IAoBFC,EAAetB,EAAAA,GAAAA,OAAH,w1BAuBR,cAAGqB,KAAH,MAAsB,SAAtB,IAOA,qBAAGA,KACR,gBAAkB,WADb,IAKF,qBAAGA,KAAmB,IAAM,GAA5B,IACE,qBAAGA,KACR,mBAAqB,eADhB,IAKA,qBAAGA,KACR,iBAAmB,WADd,ICjEJE,EAAO,SAAC,GAAc,IAAZF,EAAW,EAAXA,KACff,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,GAE/B,OACE,SAACY,EAAD,CAAYC,KAAMA,EAAlB,UACE,iCACE,SAAC,EAAD,IACCf,GAAa,SAAC,EAAD,KAAe,SAAC,EAAD,QAIpC,EAEYkB,EAAS,SAAC,GAAuB,IAArBH,EAAoB,EAApBA,KAAMI,EAAc,EAAdA,QAC7B,OACE,UAACH,EAAD,CAAcD,KAAMA,EAAMJ,QAAS,kBAAMQ,GAASJ,EAAf,EAAnC,WACE,oBACA,oBACA,qBAGL,ECHD,EApBsB,WACrB,OAAwBK,EAAAA,EAAAA,WAAS,GAAjC,eAAOL,EAAP,KAAaI,EAAb,KAEA,OACC,UAAC1B,EAAD,YACC,UAACE,EAAD,YACC,SAACuB,EAAD,CAAQH,KAAMA,EAAMI,QAASA,KAC7B,SAACF,EAAD,CAAMF,KAAMA,EAAMI,QAASA,QAE5B,SAACvB,EAAD,WACC,SAAC,EAAAyB,SAAD,CACCC,UAAU,SAAC,KAAD,CAAcC,MAAM,MAAMC,MAAM,YAD3C,UAGC,SAAC,KAAD,UAKJ,C","sources":["components/AppBar/AppBar.styled.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.jsx","components/UserMenu/UserMenu.styled.jsx","components/UserMenu/UserMenu.jsx","components/Menu/Menu.styled.jsx","components/Menu/Menu.jsx","components/AppBar/AppBar.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const AppContainer = styled.div`\n\tmargin: 0 auto;\n\tmax-width: 1200px;\n\tmin-height: 100vh;\n\tfont-size: 40px;\n\tbackground-color: #f6f6f6;\n`;\nexport const NavContainer = styled.div`\n\tborder-bottom: var(--border);\n\tdisplay: flex;\n\tjustify-content: end;\n\tborder-bottom: 1px solid #eeecec;\n\tpadding: 0 30px;\n`;\n\nexport const BodyContainer = styled.div`\n\tborder-bottom: var(--border);\n\tdisplay: flex;\n\tjustify-content: center;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n\tfont-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n\tfont-size: 1.5rem;\n\ttext-transform: uppercase;\n\tpadding: 2rem 0;\n\tfont-weight: bold;\n\tletter-spacing: 0.3rem;\n\tcolor: #0d0c1d;\n\ttext-decoration: none;\n\ttransition: color 0.3s linear;\n\n\t@media (max-width: 576px) {\n\t\tfont-size: 1.5rem;\n\t\ttext-align: center;\n\t}\n\n\t&:hover {\n\t\tcolor: var(--color-button);\n\t}\n\t&.active {\n\t\tcolor: var(--color-button);\n\t}\n\t@media (min-width: 768px) {\n\t\tmargin-right: 30px;\n\t}\n`;\n","import { NavLinkStyled } from 'components/AppBar/AppBar.styled';\n\nconst AuthNav = () => {\n\treturn (\n\t\t<>\n\t\t\t<NavLinkStyled to=\"/register\">Sign Up</NavLinkStyled>\n\t\t\t<NavLinkStyled to=\"/login\">Sign In</NavLinkStyled>\n\t\t</>\n\t);\n};\n\nexport default AuthNav;\n","import { NavLinkStyled } from 'components/AppBar/AppBar.styled';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst Navigation = () => {\n\tconst isLoggedIn = useSelector(getIsLoggedIn);\n\treturn (\n\t\t<>\n\t\t\t<NavLinkStyled to=\"/\">Home</NavLinkStyled>\n\t\t\t{isLoggedIn && (\n\t\t\t\t<NavLinkStyled to=\"/contacts\">Contacts</NavLinkStyled>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Navigation;\n","import styled from 'styled-components';\n\nexport const UserContainer = styled.div`\n\t@media (max-width: 1199px) {\n\t\tpadding: 2rem 0;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t@media (min-width: 1200px) {\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t}\n\n\twidth: 100%;\n\tdisplay: flex;\n`;\n\nexport const Name = styled.span`\n\tmargin-right: 10px;\n\tfont-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;\n\tfont-weight: 400;\n\tfont-size: 1.3rem;\n\tline-height: 1.334;\n\tletter-spacing: 0em;\n`;\n\nexport const LogOut = styled.button`\n\tbackground-color: inherit;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logOut } from 'redux/auth/authOperation';\nimport { getUserName } from 'redux/auth/authSelectors';\nimport { Name } from './UserMenu.styled';\nimport { UserContainer, LogOut } from './UserMenu.styled';\nimport { TbLogout } from 'react-icons/tb';\n\nexport const UserMenu = () => {\n\tconst dispatch = useDispatch();\n\tconst name = useSelector(getUserName);\n\n\treturn (\n\t\t<UserContainer>\n\t\t\t<Name>Welcome, {name}</Name>\n\t\t\t<LogOut type=\"button\" onClick={() => dispatch(logOut())}>\n\t\t\t\t<TbLogout size=\"30\" />\n\t\t\t</LogOut>\n\t\t</UserContainer>\n\t);\n};\n\nexport default UserMenu;\n","import styled from 'styled-components';\n\nexport const StyledMenu = styled.nav`\n\t@media (max-width: 576px) {\n\t\twidth: 100%;\n\t}\n\n\t@media (max-width: 1199px) {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\tbackground: #effffacf;\n\t\ttransform: ${({ open }) =>\n\t\t\topen ? 'translateX(0)' : 'translateX(-100%)'};\n\t\theight: 100vh;\n\t\ttext-align: left;\n\t\tpadding: 2rem;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\ttransition: transform 0.3s ease-in-out;\n\t\tz-index: 9;\n\t}\n\n\t@media (min-width: 1200px) {\n\t\tborder-bottom: var(--border);\n\t\tdisplay: flex;\n\t\tjustify-content: end;\n\t\tborder-bottom: 1px solid #eeecec;\n\t}\n`;\n\nexport const StyledBurger = styled.button`\n\t@media (max-width: 1199px) {\n\t\tposition: absolute;\n\t\ttop: 5%;\n\t\tleft: 2rem;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-around;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t\tbackground: transparent;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tpadding: 0;\n\t\tz-index: 10;\n\n\t\t&:focus {\n\t\t\toutline: none;\n\t\t}\n\n\t\tdiv {\n\t\t\twidth: 2rem;\n\t\t\theight: 0.25rem;\n\t\t\tbackground: ${({ open }) => (open ? '#0D0C1D' : '#0D0C1D')};\n\t\t\tborder-radius: 10px;\n\t\t\ttransition: all 0.3s linear;\n\t\t\tposition: relative;\n\t\t\ttransform-origin: 1px;\n\n\t\t\t:first-child {\n\t\t\t\ttransform: ${({ open }) =>\n\t\t\t\t\topen ? 'rotate(45deg)' : 'rotate(0)'};\n\t\t\t}\n\n\t\t\t:nth-child(2) {\n\t\t\t\topacity: ${({ open }) => (open ? '0' : '1')};\n\t\t\t\ttransform: ${({ open }) =>\n\t\t\t\t\topen ? 'translateX(20px)' : 'translateX(0)'};\n\t\t\t}\n\n\t\t\t:nth-child(3) {\n\t\t\t\ttransform: ${({ open }) =>\n\t\t\t\t\topen ? 'rotate(-45deg)' : 'rotate(0)'};\n\t\t\t}\n\t\t}\n\t}\n\t@media (min-width: 1200px) {\n\t\tdisplay: none;\n\t}\n`;\n","// import { NavLinkStyled } from \"components/AppBar/AppBar.styled\";\nimport AuthNav from 'components/AuthNav';\nimport Navigation from 'components/Navigation';\nimport UserMenu from 'components/UserMenu';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from 'redux/auth/authSelectors';\nimport { StyledBurger, StyledMenu } from './Menu.styled';\n\nexport const Menu = ({ open }) => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <StyledMenu open={open}>\n      <>\n        <Navigation />\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\n      </>\n    </StyledMenu>\n  );\n};\n\nexport const Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\n","import { Outlet } from 'react-router';\nimport { Suspense, useState } from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { NavContainer, AppContainer, BodyContainer } from './AppBar.styled';\nimport { Burger, Menu } from 'components/Menu/Menu';\n\nexport const AppBar = () => {\n\tconst [open, setOpen] = useState(false);\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t<NavContainer>\n\t\t\t\t<Burger open={open} setOpen={setOpen} />\n\t\t\t\t<Menu open={open} setOpen={setOpen} />\n\t\t\t</NavContainer>\n\t\t\t<BodyContainer>\n\t\t\t\t<Suspense\n\t\t\t\t\tfallback={<InfinitySpin width=\"100\" color=\"#132b13\" />}\n\t\t\t\t>\n\t\t\t\t\t<Outlet />\n\t\t\t\t</Suspense>\n\t\t\t</BodyContainer>\n\t\t</AppContainer>\n\t);\n};\n\nexport default AppBar;\n"],"names":["AppContainer","styled","NavContainer","BodyContainer","NavLinkStyled","NavLink","to","isLoggedIn","useSelector","getIsLoggedIn","UserContainer","Name","LogOut","dispatch","useDispatch","name","getUserName","type","onClick","logOut","size","StyledMenu","open","StyledBurger","Menu","Burger","setOpen","useState","Suspense","fallback","width","color"],"sourceRoot":""}